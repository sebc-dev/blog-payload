name: CI/CD Pipeline

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: blog_payload_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Format code with Prettier
        run: pnpm exec prettier --write "**/*.{js,jsx,ts,tsx,json,md,yml,yaml}" --ignore-path .gitignore

      - name: Run ESLint
        run: pnpm run lint

      - name: Generate Payload types
        run: pnpm run generate:types
        env:
          DATABASE_URI: ${{ secrets.DATABASE_URI }}
          PAYLOAD_SECRET: ${{ secrets.PAYLOAD_SECRET }}

      - name: Run unit tests
        run: pnpm run test:unit

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Run integration tests
        run: pnpm run test:int
        env:
          NODE_ENV: test
          DATABASE_URI_TEST: ${{ secrets.DATABASE_URI_TEST || 'postgresql://test_user:test_password@localhost:5433/test_payloadcms' }}
          PAYLOAD_SECRET: ${{ secrets.PAYLOAD_SECRET_TEST || secrets.PAYLOAD_SECRET }}

      - name: Build project
        run: pnpm run build
        env:
          DATABASE_URI: ${{ secrets.DATABASE_URI }}
          PAYLOAD_SECRET: ${{ secrets.PAYLOAD_SECRET }}
